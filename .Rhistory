library("tidyverse")
install.packages("tidyverse")
library("tidyverse")
setwd("C:/Users/GONZALO/Dropbox/00_Veolia_Santa_Marta/06_R")
library("raster")
install.packages("raster")
library("raster")
?raster::getData
ccodes()
col_code <- 53
getData("ISO3")
?dir.create
datadir <- "data"
dir.create(datadir)
dir()
?getData
adm <- raster::getData("GADM", country = "COL", path = datadir)
adm <- raster::getData("GADM", country = "COL", level =2, path = datadir)
adm
plot(adm)
plot(adm)
plot(adm[adm$NAME_1 == "Magdalena", ])
plot(adm[adm$NAME_1 == "Magdalena", ])
plot(mar, bg = "dodgerblue", axes = TRUE)
plot(magdalena, bg = "dodgerblue", axes = TRUE)
magdalena <- plot(adm[adm$NAME_1 == "Magdalena", ])
plot(magdalena, bg = "dodgerblue", axes = TRUE)
magdalena <- adm[adm$NAME_1 == "Magdalena", ]
plot(magdalena, bg = "dodgerblue", axes = TRUE)
?plot
plot(magdalena, bg = "dodgerblue", axes = TRUE)
warnings
magdalena <- adm[adm$NAME_1 == "Magdalena", ]
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
?plot
?invisible
=getSpatialPolygonsLabelPoints
?getSpatialPolygonsLabelPoints
invisible(text(getSpPPolygonsLabptSlots(magdalena)),
labels = as.character(magdalena$NAME_2))
# Obtener una copia temporal invisible de un objeto
invisible(text(getSpPPolygonsLabptSlots(magdalena)),
labels = as.character(magdalena$NAME_2,
cex = 1.1, col = "white", font = 2))
invisible(text(getSpPPolygonsLabptSlots(magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
invisible(text(getSpPPolygonsLabptSlots(magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
grid()
box()
# Obtener una copia temporal invisible de un objeto
invisible(text(getSpPPolygonsLabptSlots(magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
grid()
# Obtener una copia temporal invisible de un objeto
invisible(text(getSpPPolygonsLabptSlots(magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
grid()
# Obtener una copia temporal invisible de un objeto
invisible(text(getSpPPolygonsLabptSlots(magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
?text
?getSpPPolygonsLabptSlots
magdalena <- adm[adm$NAME_1 == "Magdalena", ]
# Dibujar varias capas (adicionarlas entre ellas con add = TRUE)
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
grid()
box()
# Obtener una copia temporal invisible de un objeto
# Pilas, text es una herramienta del paquete RASTER que sirve para plotear texto
# sobre un mapa existente
invisible(text(getSpP(magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
?getSpPPolygonsLabptSlots
invisible(text(over(magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
invisible(text(over(x = "SpatialPolygons", y = magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
magdalena <- adm[adm$NAME_1 == "Magdalena", ]
# Dibujar varias capas (adicionarlas entre ellas con add = TRUE)
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
grid()
box()
invisible(text(getSpPPolygonsLabptSlots(magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
?getSpPPolygonsLabptSlots
?text
invisible(text((magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 2))
invisible(text((magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 1))
magdalena <- adm[adm$NAME_1 == "Magdalena", ]
# Dibujar varias capas (adicionarlas entre ellas con add = TRUE)
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
grid()
box()
# Obtener una copia temporal invisible de un objeto
# Pilas, text es una herramienta del paquete RASTER que sirve para plotear texto
# sobre un mapa existente
invisible(text((magdalena),
labels = as.character(magdalena$NAME_2),
cex = 1.1, col = "white", font = 1))
magdalena <- adm[adm$NAME_1 == "Magdalena", ]
# Dibujar varias capas (adicionarlas entre ellas con add = TRUE)
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
grid()
box()
invisible(text((magdalena),
labels = as.character(magdalena$NAME_2),
cex = 0.5, col = "white", font = 1))
invisible(text((magdalena),
labels = as.character(magdalena$NAME_2),
cex = 0.5, col = "white", font = 1))
?mtext
# Colocar gráficos en los márgenes con mtext
mtext(side =3, "Departamento de Magdalena", line = 2.5 , cex = 1.1)
mtext(side =2, "Latitud", line = 2.5 , cex = 1.1)
mtext(side =1, "longitud", line = 2.5 , cex = 1.1)
coord <- "Proyección Geográfica\n
Sistema de Coordenadas: WGS84\n
Fuente: GADM.org"
coords
coord
coord <- "Proyección Geográfica\n
Sistema de Coordenadas: WGS84\n
Fuente: GADM.org"
coord
mtext(side =1, coord)
mtext(side =1, coord, adj = 1, cex =0.5, col = "grey")
mtext(side =1, coord, adj = 1, cex =0.5, col = "grey", line = -2)
magdalena <- adm[adm$NAME_1 == "Magdalena", ]
# Dibujar varias capas (adicionarlas entre ellas con add = TRUE)
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
grid()
box()
# Obtener una copia temporal invisible de un objeto
# Pilas, text es una herramienta del paquete RASTER que sirve para plotear texto
# sobre un mapa existente, puede determinar la ubicación de los labels con
# getSpPPolygonsLabptSlots, pero está obsoleta (deprecated)
invisible(text((magdalena),
labels = as.character(magdalena$NAME_2),
cex = 0.5, col = "white", font = 1))
# Colocar gráficos en los márgenes con mtext
mtext(side =3, "Departamento de Magdalena", line = 2.5 , cex = 1.1)
mtext(side =2, "Latitud", line = 2.5 , cex = 1.1)
mtext(side =1, "longitud", line = 2.5 , cex = 1.1)
mtext(side =1, coord, adj = 1, cex =0.5, col = "grey", line = -2)
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
plot(adm, add = TRUE)
library("spatstat")
install.packages("spatstat")
plot(magdalena, bg = "dodgerblue", axes = TRUE)
plot(magdalena, lwd = 10, border = "skyblue", add = TRUE)
plot(magdalena, col= "green4", add =TRUE)
plot(adm, add = TRUE)
grid()
box()
# Obtener una copia temporal invisible de un objeto
# Pilas, text es una herramienta del paquete RASTER que sirve para plotear texto
# sobre un mapa existente, puede determinar la ubicación de los labels con
# getSpPPolygonsLabptSlots, pero está obsoleta (deprecated)
invisible(text((magdalena),
labels = as.character(magdalena$NAME_2),
cex = 0.5, col = "white", font = 1))
# Colocar gráficos en los márgenes con mtext
mtext(side =3, "Departamento de Magdalena", line = 2.5 , cex = 1.1)
mtext(side =2, "Latitud", line = 2.5 , cex = 1.1)
mtext(side =1, "longitud", line = 2.5 , cex = 1.1)
mtext(side =1, coord, adj = 1, cex =0.5, col = "grey", line = -2)
install.packages(rgeos)
install.packages("rgeos")
library("spatstat")
library("rgeos")
col_DEM <- raster::getData("alt", country = "COL", mask = TRUE)
?runifpoint
dran <- runifpoint(500, win = as.vector(extent(col_adm)))
col_adm <- raster::getData("GADM", country = "COL", level =2, path = datadir)
col_DEM <- raster::getData("alt", country = "COL", mask = TRUE)
coord <- "Proyección Geográfica\n
Sistema de Coordenadas: WGS84\n
Fuente: GADM.org"
# Creacion de n puntos distribuidos de forma uniforme
dran <- runifpoint(500, win = as.vector(extent(col_adm)))
extent(col_adm)
dran
class(dran)
?CRS
S <- SpatialPoints(data.frame(x= dran$x, y= dran$y),
proj4string = CRS(proj4string(col_adm)) )
dran <- runifpoint(500, win = as.vector(extent(col_adm)))
s <- SpatialPoints(data.frame(x= dran$x, y= dran$y),
proj4string = CRS(proj4string(col_adm)) )
s_col <- gIntersection(s, adm_col)
s_col <- gIntersection(s, col_adm)
?proj4string
a <- proj4string(col_adm)
a
dran
plot(col_adm)
plot(col_DEM, add = TRUE)
plot(s_col, add = TRUE, col = "red", pch = 19, cex = 0.2)
plot(col_DEM )
plot(col_adm, add = TRUE)
plot(s_col, add = TRUE, col = "red", pch = 19, cex = 0.2)
proj4string(col_adm)
proj4string(col_DEM)
plot(col_DEM )
plot(col_adm, add = TRUE)
plot(s_col, add = TRUE, col = "red", pch = 19, cex = 0.2)
puntos_alt <- extract(col_DEM, s_col, df= TRUE)
puntos_alt <- extract(col_DEM, s_col, df= TRUE)
colnames(puntos_alt) <- c("id", "altura")
plot(puntos_alt)
download.file(url = 'https://raw.githubusercontent.com/loicdtx/bfastSpatial/master/data/tura.rda', destfile = 'tura.rda', method = 'auto')
load('tura.rda')
setwd("C:/Users/GONZALO/Dropbox/00_Veolia_Santa_Marta/06_R")
library("zoo")
########## Cargar paquetes requeridos ##############
library("tidyverse")
library("raster")
library("spatstat")
library("rgeos")
library("zoo")
load('tura.rda')
zoo
?zoo
click2ts <- function(x) {
val <- click(x, n = 1)
z <- getZ(x)
plot(zoo(t(val), z), type = 'p', pch = 20, xlab = 'Time', ylab = 'NDVI (-)')
}
?click
?getZ
?t
click2ts <- function(x) {
val <- click(x, n = 1)
z <- getZ(x)
plot(zoo(t(val), z), type = 'p', pch = 20, xlab = 'Time', ylab = 'NDVI (-)')
}
?getZ
plot(tura, 1)
click2ts(tura)
plot(tura, 1)
plot(tura)
tura
click2ts(tura)
click2ts <- function(x) {
val <- click(x, n = 1)
z <- getZ(x)
plot(zoo(t(val), z), type = 'l', pch = 20, xlab = 'Time', ylab = 'NDVI (-)')
}
# pintar el ráster y activar la función
plot(tura)
click2ts(tura)
?plot
click2ts <- function(x) {
val <- click(x, n = 1)
z <- getZ(x)
plot(zoo(t(val), z), type = 'h', pch = 20, xlab = 'Time', ylab = 'NDVI (-)')
}
# pintar el ráster y activar la función
plot(tura,1)
click2ts(tura)
?lubridate
library("lubridate")
sys()
sys
library("lubridate")
download.file(url = 'https://raw.githubusercontent.com/GeoScripting-WUR/Scripting4Geo/gh-pages/data/MODIS_VCF_2000-2010_NL.rds', destfile = 'MODIS_VCF_2000-2010_NL.rds', method = 'auto')
?wget
dir()
modis <- readRDS('MODIS_VCF_2000-2010_NL.rds')
# En los datos si el valor es superior a 100 corresponde a cuerpos de agua
# se eleminan estos datos con una selección similar a un DF
modis[modis > 100] <- NA
modis <- readRDS('MODIS_VCF_2000-2010_NL.rds')
download.file(url = 'https://raw.githubusercontent.com/GeoScripting-WUR/Scripting4Geo/gh-pages/data/MODIS_VCF_2000-2010_NL.rds',
destfile = 'MODIS_VCF_2000-2010_NL.rds', method = 'wget')
download.file(url = 'https://raw.githubusercontent.com/GeoScripting-WUR/Scripting4Geo/gh-pages/data/MODIS_VCF_2000-2010_NL.rds',
destfile = 'MODIS_VCF_2000-2010_NL.rds', method = 'auto')
modis <- readRDS('MODIS_VCF_2000-2010_NL.rds')
dir()
modis <- readRDS('MODIS_VCF_2000-2010_NL.rds')
modis <- readRDS('MODIS_VCF_2000-2010_NL.rds')
?download.file
download.file(url = 'https://raw.githubusercontent.com/GeoScripting-WUR/Scripting4Geo/gh-pages/data/MODIS_VCF_2000-2010_NL.rds',
destfile = 'MODIS.rds', method = 'curl')
download.file(url = 'https://raw.githubusercontent.com/GeoScripting-WUR/Scripting4Geo/gh-pages/data/MODIS_VCF_2000-2010_NL.rds',
destfile = 'MODIS.rds', method = 'wget')
install.packages("installr")
updateR()
library(installr)
updateR()
